"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubscriptionUpdateSchema = exports.SubscriptionSchema = exports.AccessRights = exports.SubscriptionType = void 0;
const typebox_1 = require("@sinclair/typebox");
var SubscriptionType;
(function (SubscriptionType) {
    SubscriptionType["Author"] = "Author";
    SubscriptionType["Subscriber"] = "Subscriber";
})(SubscriptionType = exports.SubscriptionType || (exports.SubscriptionType = {}));
var AccessRights;
(function (AccessRights) {
    AccessRights["Audit"] = "Audit";
    AccessRights["Read"] = "Read";
    AccessRights["Write"] = "Write";
    AccessRights["ReadAndWrite"] = "ReadAndWrite";
})(AccessRights = exports.AccessRights || (exports.AccessRights = {}));
exports.SubscriptionSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Enum(SubscriptionType),
    channelAddress: typebox_1.Type.String({ minLength: 105, maxLength: 105 }),
    id: typebox_1.Type.String({ minLength: 50, maxLength: 53 }),
    state: typebox_1.Type.String(),
    subscriptionLink: typebox_1.Type.Optional(typebox_1.Type.String()),
    isAuthorized: typebox_1.Type.Boolean(),
    accessRights: typebox_1.Type.Enum(AccessRights),
    publicKey: typebox_1.Type.Optional(typebox_1.Type.String()),
    keyloadLink: typebox_1.Type.Optional(typebox_1.Type.String()),
    sequenceLink: typebox_1.Type.Optional(typebox_1.Type.String()),
    pskId: typebox_1.Type.Optional(typebox_1.Type.String())
});
exports.SubscriptionUpdateSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Optional(typebox_1.Type.Enum(SubscriptionType)),
    channelAddress: typebox_1.Type.Optional(typebox_1.Type.String({ minLength: 105, maxLength: 105 })),
    id: typebox_1.Type.Optional(typebox_1.Type.String({ minLength: 50, maxLength: 53 })),
    state: typebox_1.Type.Optional(typebox_1.Type.String()),
    subscriptionLink: typebox_1.Type.Optional(typebox_1.Type.String()),
    isAuthorized: typebox_1.Type.Optional(typebox_1.Type.Boolean()),
    accessRights: typebox_1.Type.Optional(typebox_1.Type.Enum(AccessRights)),
    publicKey: typebox_1.Type.Optional(typebox_1.Type.String()),
    keyloadLink: typebox_1.Type.Optional(typebox_1.Type.String()),
    sequenceLink: typebox_1.Type.Optional(typebox_1.Type.String()),
    pskId: typebox_1.Type.Optional(typebox_1.Type.String())
});
//# sourceMappingURL=subscription.js.map