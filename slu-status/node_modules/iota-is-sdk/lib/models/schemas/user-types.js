"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceSchema = exports.ServiceSchema = exports.ProductSchema = exports.PersonSchema = exports.OrganizationSchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const user_types_helper_1 = require("./user-types-helper");
exports.OrganizationSchema = typebox_1.Type.Object(Object.assign(Object.assign({}, user_types_helper_1.ThingObject), { brand: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.BrandSchema, typebox_1.Type.String()])), address: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.PostalAddressSchema, typebox_1.Type.String()])), email: typebox_1.Type.Optional(typebox_1.Type.String()), faxNumber: typebox_1.Type.Optional(typebox_1.Type.String()), location: typebox_1.Type.Optional(typebox_1.Type.String()), slogan: typebox_1.Type.Optional(typebox_1.Type.String()), taxID: typebox_1.Type.Optional(typebox_1.Type.String()), telephone: typebox_1.Type.Optional(typebox_1.Type.String()), vatID: typebox_1.Type.Optional(typebox_1.Type.String()) }), { description: (0, user_types_helper_1.schemaDescriptionCreator)('Organization') });
exports.PersonSchema = typebox_1.Type.Object(Object.assign(Object.assign({}, user_types_helper_1.ThingObject), { familyName: typebox_1.Type.Optional(typebox_1.Type.String()), givenName: typebox_1.Type.Optional(typebox_1.Type.String()), memberOf: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.Array(exports.OrganizationSchema), exports.OrganizationSchema, typebox_1.Type.String()])), worksFor: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.Array(exports.OrganizationSchema), exports.OrganizationSchema, typebox_1.Type.String()])), address: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.PostalAddressSchema, typebox_1.Type.String()])), colleague: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.Array(typebox_1.Type.String())])), email: typebox_1.Type.Optional(typebox_1.Type.String()), jobTitle: typebox_1.Type.Optional(typebox_1.Type.String()), birthDate: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date' })), height: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.DistanceSchema, user_types_helper_1.QuantitativeValueSchema])), weight: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.QuantitativeValueSchema])), gender: typebox_1.Type.Optional(typebox_1.Type.String()), nationality: typebox_1.Type.Optional(typebox_1.Type.String()), telephone: typebox_1.Type.Optional(typebox_1.Type.String()) }), { description: (0, user_types_helper_1.schemaDescriptionCreator)('Person') });
exports.ProductSchema = typebox_1.Type.Object(Object.assign(Object.assign({}, user_types_helper_1.ThingObject), { aggregateRating: typebox_1.Type.Optional(user_types_helper_1.AggregateRatingSchema), award: typebox_1.Type.Optional(typebox_1.Type.String()), brand: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.String(), user_types_helper_1.BrandSchema, exports.OrganizationSchema])), category: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())), color: typebox_1.Type.Optional(typebox_1.Type.String()), image: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.Array(typebox_1.Type.String())])), gtin: typebox_1.Type.Optional(typebox_1.Type.String()), height: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.DistanceSchema, user_types_helper_1.QuantitativeValueSchema, typebox_1.Type.String()])), logo: typebox_1.Type.Optional(typebox_1.Type.String()), manufacturer: typebox_1.Type.Optional(exports.OrganizationSchema), material: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.String(), user_types_helper_1.ThingSchema])), model: typebox_1.Type.Optional(typebox_1.Type.String()), mpn: typebox_1.Type.Optional(typebox_1.Type.String()), nsn: typebox_1.Type.Optional(typebox_1.Type.String()), offers: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.OfferSchema, user_types_helper_1.DemandSchema, user_types_helper_1.AggregateOfferSchema])), pattern: typebox_1.Type.Optional(typebox_1.Type.String()), productID: typebox_1.Type.Optional(typebox_1.Type.String()), productionDate: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), purchaseDate: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), releaseDate: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), review: typebox_1.Type.Optional(user_types_helper_1.ReviewSchema), size: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.String(), user_types_helper_1.QuantitativeValueSchema])), sku: typebox_1.Type.Optional(typebox_1.Type.String()), slogan: typebox_1.Type.Optional(typebox_1.Type.String()), weight: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.QuantitativeValueSchema, typebox_1.Type.String()])), width: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.DistanceSchema, user_types_helper_1.QuantitativeValueSchema, typebox_1.Type.String()])) }), { description: (0, user_types_helper_1.schemaDescriptionCreator)('Product') });
exports.ServiceSchema = typebox_1.Type.Object(Object.assign(Object.assign({}, user_types_helper_1.ThingObject), { aggregateRating: typebox_1.Type.Optional(user_types_helper_1.AggregateRatingSchema), availableChannel: typebox_1.Type.Optional(user_types_helper_1.ServiceChannelSchema), brand: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.BrandSchema, exports.OrganizationSchema])), category: typebox_1.Type.Optional(typebox_1.Type.String()), offers: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.OfferSchema, user_types_helper_1.DemandSchema])), provider: typebox_1.Type.Optional(typebox_1.Type.Union([exports.OrganizationSchema, exports.PersonSchema])), review: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.ReviewSchema, exports.PersonSchema])), serviceOutput: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.ThingSchema])), serviceType: typebox_1.Type.Optional(typebox_1.Type.String()), termsOfService: typebox_1.Type.Optional(typebox_1.Type.String()) }), { description: (0, user_types_helper_1.schemaDescriptionCreator)('Service') });
exports.DeviceSchema = typebox_1.Type.Object(Object.assign(Object.assign({}, user_types_helper_1.ThingObject), { category: typebox_1.Type.Array(typebox_1.Type.Enum(user_types_helper_1.ProductEnum)), controlledProperty: typebox_1.Type.Array(typebox_1.Type.Union([typebox_1.Type.Enum(user_types_helper_1.DeviceControlledProperty), typebox_1.Type.String()])), address: typebox_1.Type.Optional(user_types_helper_1.PostalAddressSchema), batteryLevel: typebox_1.Type.Optional(typebox_1.Type.Number()), configuration: typebox_1.Type.Optional(typebox_1.Type.Union([user_types_helper_1.StructuredValueSchema, user_types_helper_1.ThingSchema])), controlledAsset: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Array(typebox_1.Type.String()), user_types_helper_1.ThingSchema])), dataProvider: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Any()])), dateFirstUsed: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), dateInstalled: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), dateLastCalibration: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), dateLastValueReported: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), dateManufacured: typebox_1.Type.Optional(typebox_1.Type.String({ format: 'date-time' })), deviceState: typebox_1.Type.Optional(typebox_1.Type.String()), direction: typebox_1.Type.Optional(typebox_1.Type.Enum(user_types_helper_1.DeviceDirection)), distance: typebox_1.Type.Optional(typebox_1.Type.Number()), dstAware: typebox_1.Type.Optional(typebox_1.Type.Boolean()), depth: typebox_1.Type.Optional(typebox_1.Type.Number()), firmwareVersion: typebox_1.Type.Optional(typebox_1.Type.String()), hardwareVersion: typebox_1.Type.Optional(typebox_1.Type.String()), ipAddress: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())), location: typebox_1.Type.Optional(typebox_1.Type.Any()), macAddress: typebox_1.Type.Optional(typebox_1.Type.Array(typebox_1.Type.String())), mcc: typebox_1.Type.Optional(typebox_1.Type.String()), mnc: typebox_1.Type.Optional(typebox_1.Type.String()), osVersion: typebox_1.Type.Optional(typebox_1.Type.String()), owner: typebox_1.Type.Optional(typebox_1.Type.Union([exports.PersonSchema, exports.OrganizationSchema, typebox_1.Type.String(), typebox_1.Type.Array(typebox_1.Type.String())])), provider: typebox_1.Type.Optional(typebox_1.Type.Union([exports.PersonSchema, exports.OrganizationSchema, typebox_1.Type.String()])), refDeviceModel: typebox_1.Type.Optional(typebox_1.Type.Any()), relativePosition: typebox_1.Type.Optional(typebox_1.Type.String()), rssi: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.Number(), typebox_1.Type.Array(typebox_1.Type.Number())])), serialNumber: typebox_1.Type.Optional(typebox_1.Type.String()), softwareVersion: typebox_1.Type.Optional(typebox_1.Type.String()), source: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.String(), typebox_1.Type.Any()])), supportedProtocol: typebox_1.Type.Optional(typebox_1.Type.Enum(user_types_helper_1.DeviceProtocol)), value: typebox_1.Type.Optional(typebox_1.Type.Union([typebox_1.Type.String(), user_types_helper_1.QuantitativeValueSchema])) }), {
    description: 'Device schema, see the specification at: https://github.com/smart-data-models/dataModel.Device/blob/master/Device/doc/spec.md or https://github.com/smart-data-models/dataModel.Device/blob/master/DeviceModel/doc/spec.md or https://petstore.swagger.io/?url=https://smart-data-models.github.io/dataModel.Device/Device/swagger.yaml#/ngsi-ld/get_ngsi_ld_v1_entities'
});
//# sourceMappingURL=user-types.js.map