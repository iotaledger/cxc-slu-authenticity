export declare enum Encoding {
    base16 = "base16",
    base58 = "base58",
    base64 = "base64"
}
export declare const VerifiableCredentialSubjectSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    type: import("@sinclair/typebox").TString;
    initiatorId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export declare const VerifiableCredentialSchema: import("@sinclair/typebox").TObject<{
    '@context': import("@sinclair/typebox").TString;
    id: import("@sinclair/typebox").TString;
    type: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString>;
    credentialSubject: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        type: import("@sinclair/typebox").TString;
        initiatorId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    }>;
    issuer: import("@sinclair/typebox").TString;
    issuanceDate: import("@sinclair/typebox").TString;
    proof: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TString;
        verificationMethod: import("@sinclair/typebox").TString;
        signatureValue: import("@sinclair/typebox").TString;
    }>;
}>;
export declare const IdentityDocumentJsonSchema: import("@sinclair/typebox").TObject<{
    id: import("@sinclair/typebox").TString;
    verificationMethod: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        controller: import("@sinclair/typebox").TString;
        type: import("@sinclair/typebox").TString;
        publicKeyBase58: import("@sinclair/typebox").TString;
    }>>>;
    previousMessageId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    authentication: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        controller: import("@sinclair/typebox").TString;
        type: import("@sinclair/typebox").TString;
        publicKeyBase58: import("@sinclair/typebox").TString;
    }>>;
    created: import("@sinclair/typebox").TString;
    updated: import("@sinclair/typebox").TString;
    immutable: import("@sinclair/typebox").TBoolean;
    proof: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TString;
        verificationMethod: import("@sinclair/typebox").TString;
        signatureValue: import("@sinclair/typebox").TString;
    }>;
}>;
export declare const LatestIdentityJsonSchema: import("@sinclair/typebox").TObject<{
    document: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        verificationMethod: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>>;
        previousMessageId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        authentication: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        immutable: import("@sinclair/typebox").TBoolean;
        proof: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            verificationMethod: import("@sinclair/typebox").TString;
            signatureValue: import("@sinclair/typebox").TString;
        }>;
    }>;
    messageId: import("@sinclair/typebox").TString;
}>;
export declare const IdentityKeyPairJsonSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TString;
    public: import("@sinclair/typebox").TString;
    secret: import("@sinclair/typebox").TString;
    encoding: import("@sinclair/typebox").TEnum<import("@sinclair/typebox").TEnumKey<Encoding>[]>;
}>;
export declare const IdentityJsonSchema: import("@sinclair/typebox").TObject<{
    doc: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        verificationMethod: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>>;
        previousMessageId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        authentication: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        immutable: import("@sinclair/typebox").TBoolean;
        proof: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            verificationMethod: import("@sinclair/typebox").TString;
            signatureValue: import("@sinclair/typebox").TString;
        }>;
    }>;
    key: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TString;
        public: import("@sinclair/typebox").TString;
        secret: import("@sinclair/typebox").TString;
        encoding: import("@sinclair/typebox").TEnum<import("@sinclair/typebox").TEnumKey<Encoding>[]>;
    }>;
}>;
export declare const DocumentJsonUpdateSchema: import("@sinclair/typebox").TObject<{
    doc: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        verificationMethod: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>>;
        previousMessageId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        authentication: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        immutable: import("@sinclair/typebox").TBoolean;
        proof: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            verificationMethod: import("@sinclair/typebox").TString;
            signatureValue: import("@sinclair/typebox").TString;
        }>;
    }>;
    txHash: import("@sinclair/typebox").TString;
}>;
export declare const IdentityJsonUpdateSchema: import("@sinclair/typebox").TObject<{
    doc: import("@sinclair/typebox").TObject<{
        id: import("@sinclair/typebox").TString;
        verificationMethod: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>>;
        previousMessageId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
        authentication: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
            id: import("@sinclair/typebox").TString;
            controller: import("@sinclair/typebox").TString;
            type: import("@sinclair/typebox").TString;
            publicKeyBase58: import("@sinclair/typebox").TString;
        }>>;
        created: import("@sinclair/typebox").TString;
        updated: import("@sinclair/typebox").TString;
        immutable: import("@sinclair/typebox").TBoolean;
        proof: import("@sinclair/typebox").TObject<{
            type: import("@sinclair/typebox").TString;
            verificationMethod: import("@sinclair/typebox").TString;
            signatureValue: import("@sinclair/typebox").TString;
        }>;
    }>;
    key: import("@sinclair/typebox").TObject<{
        type: import("@sinclair/typebox").TString;
        public: import("@sinclair/typebox").TString;
        secret: import("@sinclair/typebox").TString;
        encoding: import("@sinclair/typebox").TEnum<import("@sinclair/typebox").TEnumKey<Encoding>[]>;
    }>;
    txHash: import("@sinclair/typebox").TString;
}>;
//# sourceMappingURL=identity.d.ts.map