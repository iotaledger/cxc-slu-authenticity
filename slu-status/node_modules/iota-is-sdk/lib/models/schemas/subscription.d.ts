export declare enum SubscriptionType {
    Author = "Author",
    Subscriber = "Subscriber"
}
export declare enum AccessRights {
    Audit = "Audit",
    Read = "Read",
    Write = "Write",
    ReadAndWrite = "ReadAndWrite"
}
export declare const SubscriptionSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TEnum<import("@sinclair/typebox").TEnumKey<SubscriptionType>[]>;
    channelAddress: import("@sinclair/typebox").TString;
    id: import("@sinclair/typebox").TString;
    state: import("@sinclair/typebox").TString;
    subscriptionLink: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    isAuthorized: import("@sinclair/typebox").TBoolean;
    accessRights: import("@sinclair/typebox").TEnum<import("@sinclair/typebox").TEnumKey<AccessRights>[]>;
    publicKey: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    keyloadLink: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sequenceLink: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    pskId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
export declare const SubscriptionUpdateSchema: import("@sinclair/typebox").TObject<{
    type: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TEnum<import("@sinclair/typebox").TEnumKey<SubscriptionType>[]>>;
    channelAddress: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    id: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    state: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    subscriptionLink: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    isAuthorized: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TBoolean>;
    accessRights: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TEnum<import("@sinclair/typebox").TEnumKey<AccessRights>[]>>;
    publicKey: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    keyloadLink: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    sequenceLink: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
    pskId: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString>;
}>;
//# sourceMappingURL=subscription.d.ts.map