"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustedRootBodySchema = exports.RevokeVerificationBodySchema = exports.VerifyIdentityBodySchema = exports.SubjectBodySchema = exports.ClaimSchema = exports.VerifiableCredentialBodySchema = void 0;
const typebox_1 = require("@sinclair/typebox");
const user_1 = require("../../types/user");
const identity_1 = require("../identity");
exports.VerifiableCredentialBodySchema = identity_1.VerifiableCredentialSchema;
exports.ClaimSchema = typebox_1.Type.Object({
    type: typebox_1.Type.Union([typebox_1.Type.Enum(user_1.UserType), typebox_1.Type.String({ minLength: 3 })])
});
exports.SubjectBodySchema = typebox_1.Type.Object({
    id: typebox_1.Type.String({ minLength: 50, maxLength: 53 }),
    credentialType: typebox_1.Type.String(),
    claim: exports.ClaimSchema
});
exports.VerifyIdentityBodySchema = typebox_1.Type.Object({
    // subjectId: Type.Optional(Type.String({ minLength: 50, maxLength: 53 })), // did
    subject: exports.SubjectBodySchema,
    initiatorVC: typebox_1.Type.Optional(identity_1.VerifiableCredentialSchema)
});
exports.RevokeVerificationBodySchema = typebox_1.Type.Object({
    signatureValue: typebox_1.Type.String()
});
exports.TrustedRootBodySchema = typebox_1.Type.Object({
    trustedRootId: typebox_1.Type.String({ minLength: 50, maxLength: 53 }) // did
});
//# sourceMappingURL=verification-bodies.js.map